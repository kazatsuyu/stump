import {
  At,
  DeconstructVariableTuple,
  Fill,
  Flatten,
  IndexSequence,
  Last,
  MinLength,
  Reverse,
  ReverseSequence,
  Slice,
  Sum,
} from './tuple.mjs';
import { AssertEq } from '@stump/base';

namespace _test {
  type _Test = [
    AssertEq<Fill<0, '15'>, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]>,
    AssertEq<IndexSequence<'15'>, ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14']>,
    AssertEq<IndexSequence<'3', '4'>, ['4', '5', '6']>,
    AssertEq<ReverseSequence<'15'>, ['14', '13', '12', '11', '10', '9', '8', '7', '6', '5', '4', '3', '2', '1', '0']>,
    AssertEq<ReverseSequence<'3', '8'>, ['10', '9', '8']>,
    AssertEq<Reverse<['a', 'b', 'c']>, ['c', 'b', 'a']>,
    AssertEq<Slice<['a', 'b', 'c', 'd', 'e'], '1', '4'>, ['b', 'c', 'd']>,
    AssertEq<Slice<['a', 'b', 'c', 'd', 'e'], '4', '1'>, []>,
    AssertEq<Slice<['a', 'b', 'c', 'd', 'e'], '-3', '-1'>, ['c', 'd']>,
    AssertEq<Slice<['a', 'b', 'c', 'd', 'e'], '-3'>, ['c', 'd', 'e']>,
    AssertEq<Slice<['a', 'b', 'c', 'd', 'e']>, ['a', 'b', 'c', 'd', 'e']>,
    AssertEq<Slice<['a', 'b', 'c', 'd', 'e'], '0', '3'>, ['a', 'b', 'c']>,
    AssertEq<Slice<['a', 'b', 'c', 'd', 'e'], '1', '-1'>, ['b', 'c', 'd']>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5]>, [1, 2, 3, ...0[], 4, 5]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '1'>, [2, 3, ...0[], 4, 5]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '2'>, [3, ...0[], 4, 5]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '3'>, [...0[], 4, 5]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '4'>, [...(0 | 4)[], 5]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '5'>, (0 | 4 | 5)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '6'>, (0 | 4 | 5)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '6', '-1'>, (0 | 4)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '6', '-2'>, 0[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '6', '-3'>, 0[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '0', '-1'>, [1, 2, 3, ...0[], 4]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '0', '-2'>, [1, 2, 3, ...0[]]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '0', '-3'>, [1, 2, ...(0 | 3)[]]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '0', '-4'>, [1, ...(0 | 2 | 3)[]]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '0', '-5'>, (0 | 1 | 2 | 3)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '0', '-6'>, (0 | 1 | 2 | 3)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '1', '-6'>, (0 | 2 | 3)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '2', '-6'>, (0 | 3)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '3', '-6'>, 0[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '4', '-6'>, 0[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '1', '0'>, []>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '1', '1'>, []>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '1', '2'>, [2]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '1', '3'>, [2, 3]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '1', '4'>, [2, 3, ...(0 | 4)[]]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '1', '5'>, [2, 3, ...(0 | 4 | 5)[]]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '1', '6'>, [2, 3, ...(0 | 4 | 5)[]]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '2', '6'>, [3, ...(0 | 4 | 5)[]]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '3', '6'>, (0 | 4 | 5)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '4', '6'>, (0 | 4 | 5)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '5', '6'>, (0 | 4 | 5)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '6', '6'>, []>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '1', '-1'>, [2, 3, ...0[], 4]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '2', '-1'>, [3, ...0[], 4]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '3', '-1'>, [...0[], 4]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '4', '-1'>, (0 | 4)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '5', '-1'>, (0 | 4)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '5', '-2'>, 0[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '5', '-3'>, 0[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], Last>, []>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-1'>, [5]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-2'>, [4, 5]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-3'>, [...(0 | 3)[], 4, 5]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-4'>, [...(0 | 2 | 3)[], 4, 5]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-5'>, [...(0 | 1 | 2 | 3)[], 4, 5]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-6', '-1'>, [...(0 | 1 | 2 | 3)[], 4]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-6', '-2'>, (0 | 1 | 2 | 3)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-6', '-3'>, (0 | 1 | 2 | 3)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-6', '-5'>, (0 | 1 | 2 | 3)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-6', '-6'>, []>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-6', '0'>, []>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-6', '1'>, 1[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-6', '2'>, (1 | 2)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-6', '3'>, (1 | 2 | 3)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-6', '4'>, (0 | 1 | 2 | 3 | 4)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-6', '5'>, (0 | 1 | 2 | 3 | 4 | 5)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-6', '6'>, (0 | 1 | 2 | 3 | 4 | 5)[]>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-1', '1'>, []>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-2', '1'>, []>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-3', '1'>, []>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-4', '1'>, []>,
    AssertEq<Slice<[1, 2, 3, ...0[], 4, 5], '-5', '1'>, 1[]>,
    AssertEq<DeconstructVariableTuple<[1, 2, ...0[]]>, [[1, 2], 0[], []]>,
    AssertEq<DeconstructVariableTuple<[...0[], 1, 2, 3]>, [[], 0[], [1, 2, 3]]>,
    AssertEq<DeconstructVariableTuple<[1, 2, ...0[], 3, 4, 5]>, [[1, 2], 0[], [3, 4, 5]]>,
    AssertEq<MinLength<[]>, '0'>,
    AssertEq<MinLength<[1, 2, ...0[]]>, '2'>,
    AssertEq<MinLength<[...0[], 1, 2, 3]>, '3'>,
    AssertEq<MinLength<[1, 2, ...0[], 3, 4, 5]>, '5'>,
    AssertEq<At<[1, 2, 3], '-4'>, undefined>,
    AssertEq<At<[1, 2, 3], '-3'>, 1>,
    AssertEq<At<[1, 2, 3], '-1'>, 3>,
    AssertEq<At<[1, 2, 3], '0'>, 1>,
    AssertEq<At<[1, 2, 3], '1'>, 2>,
    AssertEq<At<[1, 2, 3], '2'>, 3>,
    AssertEq<At<[1, 2, 3], '3'>, undefined>,
    AssertEq<At<[1, 2, 3, ...0[]], '-4'>, 0 | 1 | 2 | 3 | undefined>,
    AssertEq<At<[1, 2, 3, ...0[]], '-3'>, 0 | 1 | 2 | 3>,
    AssertEq<At<[1, 2, 3, ...0[]], '-1'>, 0 | 3>,
    AssertEq<At<[1, 2, 3, ...0[]], '0'>, 1>,
    AssertEq<At<[1, 2, 3, ...0[]], '1'>, 2>,
    AssertEq<At<[1, 2, 3, ...0[]], '2'>, 3>,
    AssertEq<At<[1, 2, 3, ...0[]], '3'>, 0 | undefined>,
    AssertEq<At<[...0[], 1, 2, 3], '-4'>, 0 | undefined>,
    AssertEq<At<[...0[], 1, 2, 3], '-3'>, 1>,
    AssertEq<At<[...0[], 1, 2, 3], '-1'>, 3>,
    AssertEq<At<[...0[], 1, 2, 3], '0'>, 0 | 1>,
    AssertEq<At<[...0[], 1, 2, 3], '1'>, 0 | 1 | 2>,
    AssertEq<At<[...0[], 1, 2, 3], '2'>, 0 | 1 | 2 | 3>,
    AssertEq<At<[...0[], 1, 2, 3], '3'>, 0 | 1 | 2 | 3 | undefined>,
    AssertEq<At<[1, 2, 3, ...0[], 4, 5], '-6'>, 0 | 1 | 2 | 3 | undefined>,
    AssertEq<At<[1, 2, 3, ...0[], 4, 5], '-5'>, 0 | 1 | 2 | 3>,
    AssertEq<At<[1, 2, 3, ...0[], 4, 5], '-3'>, 0 | 3>,
    AssertEq<At<[1, 2, 3, ...0[], 4, 5], '-1'>, 5>,
    AssertEq<At<[1, 2, 3, ...0[], 4, 5], '0'>, 1>,
    AssertEq<At<[1, 2, 3, ...0[], 4, 5], '1'>, 2>,
    AssertEq<At<[1, 2, 3, ...0[], 4, 5], '2'>, 3>,
    AssertEq<At<[1, 2, 3, ...0[], 4, 5], '3'>, 0 | 4>,
    AssertEq<At<[1, 2, 3, ...0[], 4, 5], '4'>, 0 | 4 | 5>,
    AssertEq<At<[1, 2, 3, ...0[], 4, 5], '5'>, 0 | 4 | 5 | undefined>,
    AssertEq<Sum<['1', '2', '3', '4', '5']>, '15'>,
    AssertEq<Sum<[]>, '0'>,
  ][number];
}
